[tool.poetry]
name = "mqtt-influxdb-gateway"
version = "0.2.2"
description = "An MQTT gateway sending data to InfluxDB"
authors = ["Radek LÃ¡t <radek.lat@gmail.com>"]
homepage = "https://github.com/radeklat/mqtt-influxdb-gateway"
license = "MIT License"

[tool.poetry.dependencies]
python = "==3.9.16"
pydantic = "^1.8.2"
influxdb-client = {extras = ["ciso"], version = "^1.22.0"}
paho-mqtt = "^1.6.1"
loguru = "^0.6.0"  # https://github.com/Delgan/loguru/blob/master/CHANGELOG.rst

[tool.poetry.dev-dependencies]
types-toml = "*"
settings-doc = "^1.0.0"
delfino-core = {extras = ["verify_all", "dependencies-update"], version = "^4.0.0"}
delfino-docker = "^2.0.1"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.isort]
# Setting compatible with black. See https://black.readthedocs.io/en/stable/compatible_configs.html
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 120

[tool.black]
line-length = 120
target-version = ['py38']
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.pytest.ini_options]
testpaths = "tests/unit tests/integration"
python_functions = "should_*"
junit_family = "xunit2"

# Structure: https://docs.pytest.org/en/stable/warnings.html
# Values:    https://docs.python.org/3/library/warnings.html#describing-warning-filters
#            action:message:category:module:line
filterwarnings = [

]

markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
]

[tool.mypy]
show_column_numbers = true
show_error_codes = true
color_output = true
warn_unused_configs = true
warn_unused_ignores = true
follow_imports = "silent"

[[tool.mypy.overrides]]
# Source code dependencies
module = [
    "paho.*",
    "influxdb_client.*",
    "delfino.*",
]
ignore_missing_imports = true

[tool.pydocstyle]
convention = "pep257"
match = "^(?!test_)(.*)(?<!config_parser)\\.py$"
add-ignore = [
    # See http://www.pydocstyle.org/en/stable/error_codes.html
    "D1",  # Missing docstrings. We rely on code reviews. Names are often descriptive enough and don't need additional docstring.
    "D202",  # "No blank lines allowed after function docstring" is false positive caused by black formatter.
    "D204",  # "1 blank line required after class docstring"
    "D401",  # "First line should be in imperative mood"
    "D413",  # "Missing blank line after last section"
]

[tool.delfino.plugins.delfino-core]

[tool.delfino.plugins.delfino-docker.docker_build]
dockerhub_username = "radeklat"
build_for_platforms = [
    "linux/arm/v7",
    "linux/amd64",
    "linux/arm64",
]
